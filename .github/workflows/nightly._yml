name: Nightly
on:
  schedule:
    - cron: '0 8 * * *' # Run at 8am UTC, 6pm AEST.
  workflow_dispatch:

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit

    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
      RELEASE_TAG: ${{ steps.set_release_tag.outputs.RELEASE_TAG }}
      CURRENT_DATE: ${{ steps.set_release_tag.outputs.CURRENT_DATE }}
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: set_release_tag
        name: Set the release tag
        run: |
          echo "RELEASE_TAG=nightly-$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
          echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
      
      - id: should_run
        continue-on-error: true
        name: Check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "should_run=false" >> "$GITHUB_OUTPUT"

  publish:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include: 
          - os: windows-latest 
            build_script: build-electron-win
            files: |
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-win-2.0.0-*.exe
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-win-2.0.0-*.zip
            platform: win
          - os: macos-latest 
            build_script: build-electron-mac
            files: | 
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-mac-2.0.0-*.dmg
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-mac-2.0.0-*.tar.gz
            platform: mac
          - os: ubuntu-latest 
            build_script: build-electron-linux
            files: | 
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-linux-2.0.0-*.tar.gz
            platform: linux

    runs-on: ${{ matrix.os }}

    env:
        BUILD_PARENT_DIR: ./temp
        RELEASE_TAG: ${{ needs.check_date.outputs.RELEASE_TAG }}
        PLATFORM: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 8.11.0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.18
          cache: 'pnpm'

      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ./shells/electron/temp/dfn-build/cache
          key: ${{ runner.os }}-cache

      - name: Install dependencies
        run: pnpm install

      - name: Create version file
        run: |
          echo "export const version = '2.0.0-${{ needs.check_date.outputs.RELEASE_TAG }}'; export const sha = '${{ github.sha }}';" > shells/electron/src/version.ts
          cat shells/electron/src/version.ts

      - name: Compile
        run: pnpm run compile

      - name: Build plugins 
        run: pnpm run build-plugins

      - name: Build installer
        run: |
            pnpm run build-electron-${{ matrix.platform }}
            ls ./shells/electron/temp/dfn-build/build/installer
            ls ./shells/electron/temp/dfn-build/cache

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Nightly ${{ needs.check_date.outputs.CURRENT_DATE }}
          tag_name: 2.0.0-${{ needs.check_date.outputs.RELEASE_TAG }}
          body: Nightly build
          draft: false
          prerelease: true
          files: ${{ matrix.files }}