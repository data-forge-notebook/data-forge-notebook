name: Labelled release
on:
  push:
    tags:
      - v*

jobs:
  get_version:
    runs-on: ubuntu-latest # Getting the version relies on Linux commands.
    name: Get version

    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        id: get_version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/v\(.*\),\1,')

          echo "::set-output name=version::$VERSION"

          echo "Found version: $VERSION"

  build:
    needs: get_version
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include: 
          - os: windows-latest 
            build_script: build-electron-win
            files: |
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-win-${{ needs.get_version.outputs.version }}.exe
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-win-${{ needs.get_version.outputs.version }}.zip
            platform: win
          - os: macos-latest 
            build_script: build-electron-mac
            files: | 
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-mac-${{ needs.get_version.outputs.version }}.dmg
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-mac-${{ needs.get_version.outputs.version }}.tar.gz
            platform: mac
          - os: ubuntu-latest 
            build_script: build-electron-linux
            files: | 
                ./shells/electron/temp/dfn-build/build/installer/Data-Forge Notebook v2-linux-${{ needs.get_version.outputs.version }}.tar.gz
            platform: linux

    runs-on: ${{ matrix.os }}    

    env:
        BUILD_PARENT_DIR: ./temp
        DFN_VERSION: ${{ needs.get_version.outputs.version }}
        PLATFORM: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 8.11.0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.10.18
          cache: 'pnpm'

      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ./shells/electron/temp/dfn-build/cache
          key: ${{ runner.os }}-cache

      - name: Install dependencies
        run: pnpm install

      - name: Create version file
        run: |
          echo "export const version = '${{ needs.get_version.outputs.version }}'; export const sha = '${{ github.sha }}';" > shells/electron/src/version.ts
          cat shells/electron/src/version.ts

      - name: Compile
        run: pnpm run compile

      - name: Build plugins 
        run: pnpm run build-plugins

      - name: Build installer
        run: |
            pnpm run build-electron-${{ matrix.platform }}
            ls ./shells/electron/temp/dfn-build/build/installer
            ls ./shells/electron/temp/dfn-build/cache

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Data-Forge notebook v${{ needs.get_version.outputs.version }}
          body: Labelled build
          draft: true
          prerelease: false
          files: ${{ matrix.files }}